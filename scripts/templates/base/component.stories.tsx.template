import type { Meta, StoryObj } from "@storybook/react";
import { {{COMPONENT_NAME}} } from "./{{COMPONENT_NAME_KEBAB}}";

/**
 * {{COMPONENT_NAME}} component stories
 *
 * This file demonstrates all variants and use cases of the {{COMPONENT_NAME}} component.
 * Stories are used for:
 * - Visual documentation in Storybook
 * - Visual regression testing
 * - Accessibility testing with a11y addon
 * - Interactive component playground
 *
 * @see {@link ./{{COMPONENT_NAME_KEBAB}}.patterns.md} for usage patterns
 */

const meta = {
  title: "{{CATEGORY}}/{{COMPONENT_NAME}}",
  component: {{COMPONENT_NAME}},
  tags: ["autodocs"],
  parameters: {
    layout: "centered",
    // Accessibility addon configuration
    a11y: {
      config: {
        rules: [
          { id: "color-contrast", enabled: true },
          { id: "heading-order", enabled: true },
          { id: "label", enabled: true },
          { id: "landmark-one-main", enabled: true },
          { id: "region", enabled: true },
        ],
      },
    },
  },
  argTypes: {
    size: {
      control: "select",
      options: ["sm", "md", "lg", "xl"],
      description: "Size variant of the component",
    },
    variant: {
      control: "select",
      options: ["primary", "secondary"],
      description: "Visual variant of the component",
    },
    disabled: {
      control: "boolean",
      description: "Whether the component is disabled",
    },
    className: {
      control: "text",
      description: "Additional CSS classes",
    },
  },
} satisfies Meta<typeof {{COMPONENT_NAME}}>;

export default meta;
type Story = StoryObj<typeof meta>;

/**
 * Default {{COMPONENT_NAME}}
 *
 * The most common use case with default settings.
 */
export const Default: Story = {
  args: {
    children: "Default {{COMPONENT_NAME}}",
    size: "md",
    variant: "primary",
    disabled: false,
  },
};

/**
 * All Sizes
 *
 * Demonstrates all available size variants (sm, md, lg, xl).
 */
export const AllSizes: Story = {
  render: () => (
    <div className="flex flex-col gap-4 items-start">
      <{{COMPONENT_NAME}} size="sm">Small (sm)</{{COMPONENT_NAME}}>
      <{{COMPONENT_NAME}} size="md">Medium (md)</{{COMPONENT_NAME}}>
      <{{COMPONENT_NAME}} size="lg">Large (lg)</{{COMPONENT_NAME}}>
      <{{COMPONENT_NAME}} size="xl">Extra Large (xl)</{{COMPONENT_NAME}}>
    </div>
  ),
};

/**
 * All Variants
 *
 * Demonstrates all available visual variants.
 */
export const AllVariants: Story = {
  render: () => (
    <div className="flex flex-col gap-4 items-start">
      <{{COMPONENT_NAME}} variant="primary">Primary Variant</{{COMPONENT_NAME}}>
      <{{COMPONENT_NAME}} variant="secondary">Secondary Variant</{{COMPONENT_NAME}}>
    </div>
  ),
};

/**
 * Disabled State
 *
 * Shows the component in a disabled state.
 */
export const Disabled: Story = {
  args: {
    children: "Disabled {{COMPONENT_NAME}}",
    disabled: true,
  },
};

/**
 * With Custom Styling
 *
 * Demonstrates how to apply custom CSS classes.
 */
export const WithCustomStyling: Story = {
  args: {
    children: "Custom Styled",
    className: "shadow-lg border-2 border-purple-500",
  },
};

/**
 * Interactive Playground
 *
 * Use the controls panel to interactively test all props.
 * This story is useful for:
 * - Testing different prop combinations
 * - QA and exploratory testing
 * - Demonstrating component flexibility
 */
export const Interactive: Story = {
  args: {
    children: "Interactive {{COMPONENT_NAME}}",
    size: "md",
    variant: "primary",
    disabled: false,
  },
};

/**
 * Accessibility Testing
 *
 * This story is specifically designed for accessibility testing.
 * Check the a11y addon panel for accessibility issues.
 */
export const AccessibilityTest: Story = {
  render: () => (
    <div className="flex flex-col gap-4 items-start">
      <{{COMPONENT_NAME}}>Normal State</{{COMPONENT_NAME}}>
      <{{COMPONENT_NAME}} disabled>Disabled State</{{COMPONENT_NAME}}>
      <{{COMPONENT_NAME}} size="sm">Small Size</{{COMPONENT_NAME}}>
      <{{COMPONENT_NAME}} variant="secondary">Secondary Variant</{{COMPONENT_NAME}}>
    </div>
  ),
};
